<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ydlx.dao.UserMapper" >

  <resultMap id="BaseResultMap" type="com.ydlx.domain.info.UserInfo" >
    <id column="id" property="id" jdbcType="DECIMAL" />
    <result column="loginaccount" property="loginAccount" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="userName" jdbcType="VARCHAR" />
    <result column="nickname" property="nickName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="createtime" property="createTime" jdbcType="DATE" />
    <result column="modifytime" property="modifyTime" jdbcType="DATE" />
    <collection property="roleIds" javaType="list" ofType="Integer">
      <result column="roleid" property="roleId"/>
    </collection>

  </resultMap>

  
  <sql id="Base_Column_List" >
      a.id, a.loginaccount, a.password, a.username, a.nickname, a.email, a.mobile, b.roleid as roleid, a.operator, a.createtime, a.modifytime
  </sql>

  <!--根据用户ID获取用户信息-->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
          <include refid="Base_Column_List" />
        from t_s_user a left join t_s_user_role b on a.id = b.userid
    <where>
        a.id = #{id, jdbcType="INTEGER"}
    </where>
        order by a.id ASC
  </select>

  <!--根据用户登录帐号获取用户信息-->
  <select id="getByLoginAccount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_s_user a left join t_s_user_role b on a.id = b.userid
    <where>
      a.loginAccount = #{loginAccount, jdbcType="VARCHAR"}
    </where>
    order by a.id ASC
  </select>
  

  <!-- 写入用户信息 -->
  <insert id="insert" parameterType="com.ydlx.domain.info.UserInfo" >
    insert into t_s_user
      (loginaccount, password, username, email, mobile, nickname, createtime, modifytime, operator)
    value(
      #{loginAccount, jdbcType=VARCHAR},
      #{password, jdbcType=VARCHAR},
      #{userName, jdbcType=VARCHAR},
      #{email, jdbcType=VARCHAR},
      #{mobile, jdbcType=VARCHAR},
      #{nickName, jdbcType=VARCHAR},
      #{createTime, jdbcType=DATE},
      #{modifyTime, jdbcType=DATE},
      #{operator, jdbcType=VARCHAR}
    )

  </insert>

  <!-- 更新用户信息 -->
  <update id="update" parameterType="com.ydlx.domain.info.UserInfo" >
    update t_s_user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        username = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email!= null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modifytime = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <!---删除用户信息-->
  <delete id="delete" parameterType="Integer">
      delete from t_s_user where id = #{id,jdbcType=DECIMAL}
  </delete>

</mapper>